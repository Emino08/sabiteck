# Security Headers
<IfModule mod_headers.c>
    # Content Security Policy - Enhanced security with analytics geolocation support
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: data: https://www.googletagmanager.com https://www.google-analytics.com https://apis.google.com https://accounts.google.com https://gstatic.com https://www.gstatic.com; script-src-elem 'self' 'unsafe-inline' blob: data: https://www.googletagmanager.com https://www.google-analytics.com https://apis.google.com https://accounts.google.com https://gstatic.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://sabiteck.com https://backend.sabiteck.com https://www.google-analytics.com https://www.googletagmanager.com; connect-src 'self' https://sabiteck.com https://backend.sabiteck.com https://www.google-analytics.com https://analytics.google.com https://accounts.google.com https://apis.google.com https://ipapi.co; frame-src https://accounts.google.com; object-src 'none'; base-uri 'self'; worker-src 'self' blob:; form-action 'self' https://accounts.google.com; manifest-src 'self';"

    # Other security headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(self), payment=()"

    # Remove Server header for security
    Header unset Server
    Header unset X-Powered-By
</IfModule>

# Prevent access to sensitive files
<FilesMatch "^\.(htaccess|htpasswd|env|git)">
    Order allow,deny
    Deny from all
</FilesMatch>

# MIME type configuration
<IfModule mod_mime.c>
    AddType application/javascript .js
    AddType text/css .css
    AddType image/svg+xml .svg
</IfModule>

# Enable compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE text/javascript
</IfModule>

# Browser caching
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
</IfModule>

# URL Rewriting for SPA (Vite React Router)
<IfModule mod_rewrite.c>
    RewriteEngine On

    # Handle API routes - send to backend
    RewriteRule ^api/(.*)$ backend/public/index.php [L,QSA]

    # Handle static assets (CSS, JS, images, etc.)
    RewriteCond %{REQUEST_FILENAME} -f
    RewriteRule ^(.*)$ - [L]

    # Handle Vite development assets
    RewriteCond %{REQUEST_URI} \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ [NC]
    RewriteRule ^(.*)$ - [L]

    # Handle React Router - fallback to index.html for SPA
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} !^/api/
    RewriteCond %{REQUEST_URI} !^/backend/
    RewriteRule ^(.*)$ index.html [L,QSA]
</IfModule>